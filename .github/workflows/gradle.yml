# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    #내가 수정한 부분
    - name: Grant Execute Permission For Gradlew & Build gradle
      run: |
        chmod +x gradlew
        ./gradlew build 
    
    # DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Docker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/capstone .

    # Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/capstone
    
  deploy: 
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Copy docker-compose into instance   #내 인스턴스로 docker-compose.yml파일 복사.
      uses: appleboy/scp-action@master          # 이미 존재하는 경우 덮어씀
      with: 
        host: ${{secrets.GCP_HOST}}
        username: ${{secrets.GCP_USERNAME}}
        key: ${{secrets.GCP_PRIVATEKEY}}
        source: "./docker-compose.yml"
        target: "/home/${{secrets.GCP_USERNAME}}"
        strip_components: 1  # 수정된 부분
        overwrite: true
        debug: true

  
    - name: Verify docker-compose.yml on remote
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.GCP_HOST}}
        username: ${{secrets.GCP_USERNAME}}
        key: ${{secrets.GCP_PRIVATEKEY}}
        script: |
          ls -al /home/${{secrets.GCP_USERNAME}}/docker-compose.yml
          cat /home/${{secrets.GCP_USERNAME}}/docker-compose.yml
  
    - name: Deploy to Instance
      uses: appleboy/ssh-action@master     #가장 최신 버젼 appleboy 사용
      with:
        host: ${{secrets.GCP_HOST}}
        username: ${{secrets.GCP_USERNAME}}
        key: ${{secrets.GCP_PRIVATEKEY}}  
        script: |
          sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/capstone
          sudo docker rm -f $(docker ps -qa) 2>/dev/null || true
          cd /home/${{secrets.GCP_USERNAME}}
          sudo docker compose up -d
          sudo docker image prune -f

  
